{"version":3,"sources":["agent.js","middleware.js","constants/actionTypes.js","reducers/common.js","reducer.js","store.js","components/Home/index.js","components/App.js","index.js"],"names":["global","superagent_promise__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","superagent_promise__WEBPACK_IMPORTED_MODULE_0___default","n","superagent__WEBPACK_IMPORTED_MODULE_1__","superagent__WEBPACK_IMPORTED_MODULE_1___default","superagent","superagentPromise","_superagent","Promise","responseBody","res","body","requests","url","get","concat","then","Home","subreddit","value","__webpack_exports__","promiseMiddleware","store","next","action","v","payload","dispatch","type","subtype","NProgress","start","key","console","log","window","localStorage","setItem","JSON","stringify","promise","done","error","response","localStorageMiddleware","data","getItem","parse","defaultState","appName","appLoaded","subreddits","label","combineReducers","common","state","arguments","length","undefined","Object","objectSpread","pageIndex","router","routerReducer","history","createHistory","myRouterMiddleware","routerMiddleware","createStore","reducer","applyMiddleware","ImageModel","props","closeImageModal","closeImage","react_default","a","createElement","className","onClick","src","alt","aria-label","RedditList","redditArr","map","article","id","onImageClick","image","title","author","target","rel","href","aria-hidden","upvotes","commentsCount","Pagination","liString","i","pages","iVal","push","clickPage","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeSubreddit","ev","onChangeSubreddit","agent","setState","onCloseImage","pageClicked","Number","innerHTML","onChangePage","escFunction","event","keyCode","document","addEventListener","removeEventListener","redditBlock","pagination","result","children","num_comments","ups","filter","match","Math","ceil","Home_Pagination","slice","Home_RedditList","react_select_esm","onChange","options","Home_ImageModel","React","Component","connect","App","components_Home","onLoad","ReactDOM","render","lib","react_router_redux_es","Switch","Route","path","component","getElementById"],"mappings":"0FAAA,SAAAA,GAAA,IAAAC,EAAAC,EAAA,IAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAAE,EAAAC,GAGME,EAAaC,IAAkBC,IAAaT,EAAOU,SAKnDC,EAAe,SAAAC,GAAG,OAAIA,EAAIC,MAE1BC,EACA,SAAAC,GAAG,OAAIR,EAAWS,IAAX,GAAAC,OALI,6BAKJA,OAA6BF,IAAOG,KAAKP,IAGhDQ,EAAO,CACZC,UAAW,SAAAC,GAAK,OAAIP,EAAA,GAAAG,OAAgBI,EAAhB,YAGNC,EAAA,GACdH,iLCZKI,EAAoB,SAAAC,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAC,GACvC,IAkDeC,EAlDDD,EAAOE,UAmDI,oBAAND,EAvBf,OA3BAH,EAAMK,SAAS,CAAEC,KCHE,cDGiBC,QAASL,EAAOI,OAEpDE,IAAUC,aACVP,EAAOE,QAAQF,EAAOQ,KAAKhB,KACvB,SAAAN,GACIuB,QAAQC,IAAI,SAAUxB,GACtBc,EAAOE,QAAUhB,EACjByB,OAAOC,aAAaC,QAAQb,EAAOQ,IAAKM,KAAKC,UAAU7B,IACvDY,EAAMK,SAAS,CACXC,KCXK,YDYLY,QAAShB,EAAOE,UAEpBJ,EAAMK,SAASH,GACfM,IAAUW,QAEd,SAAAC,GACIT,QAAQC,IAAI,QAASQ,GACrBlB,EAAOkB,OAAQ,EACflB,EAAOE,QAAUgB,EAAMC,SAAShC,KAChCW,EAAMK,SAAS,CACXC,KCtBK,YDuBLY,QAAShB,EAAOE,UAEpBJ,EAAMK,SAASH,GACfM,IAAUW,SAyB1B,IAAmBhB,EApBfF,EAAKC,MAOHoB,EAAyB,SAAAtB,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAC,GAC5C,IAAIqB,EAAOV,OAAOC,aAAaU,QAAQtB,EAAOQ,KAEjC,OAATa,IACArB,EAAOE,QAAUY,KAAKS,MAAMF,IAEhCtB,EAAKC,kBEDHwB,EAAe,CACjBC,QAAS,aACTC,WAAW,EACXL,KAAM,KACNM,WA/CsB,CACtB,CACIhC,MAAO,EACPiC,MAAO,kBAEX,CACIjC,MAAO,EACPiC,MAAO,QAEX,CACIjC,MAAO,EACPiC,MAAO,QAEX,CACIjC,MAAO,EACPiC,MAAO,iBAEX,CACIjC,MAAO,EACPiC,MAAO,QAEX,CACIjC,MAAO,EACPiC,MAAO,UAEX,CACIjC,MAAO,EACPiC,MAAO,oBAEX,CACIjC,MAAO,EACPiC,MAAO,QAEX,CACIjC,MAAO,EACPiC,MAAO,OAEX,CACIjC,MAAO,EACPiC,MAAO,gBC1CAC,4BAAgB,CAC9BC,ODoDc,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBR,EAAcxB,EAAWgC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAQlC,EAAOI,MACX,IDvDgB,WCwDZ,OAAO+B,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIL,WAAW,IAEnB,IDvDwB,mBCwDpB,OAAOS,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIM,UAAW,EACXhB,KAAMrB,EAAOE,UAErB,ID5DmB,cC6Df,OAAOiC,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIM,UAAWrC,EAAOqC,YAE1B,QACI,OAAON,ICtElBO,OAAQC,cCEIC,QAAUC,KAGjBC,EAAqBC,YAAiBH,GAoB/B1C,EAAQ8C,sBAAYC,EAhBxBC,0BACNJ,EACAtB,EACAvB,4ECGGkD,EAAa,SAAAC,GACf,IAAMC,EAAkB,WACpBD,EAAME,cAGV,OAAoB,OAAhBF,EAAMrD,MAEFwD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OACIE,QAASN,EACTK,UAAU,qBAEdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQE,IAAKR,EAAMrD,MAAO8D,IAAI,OAGrDN,EAAAC,EAAAC,cAAA,UACIE,QAASN,EACTK,UAAU,uBACVI,aAAW,WAKhB,MASTC,EAAa,SAAAX,GACf,OACIG,EAAAC,EAAAC,cAAA,WACKL,EAAMY,UAAUC,IAAI,SAAAC,GACjB,OACIX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM9C,IAAKsD,EAAQC,IAC9BZ,EAAAC,EAAAC,cAAA,WAASC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iCACdH,EAAAC,EAAAC,cAAA,OACIE,QAAS,kBACLP,EAAMgB,aAAaF,EAAQG,QAE/BT,IAAKM,EAAQG,MACbR,IAAI,cAIhBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YACZH,EAAAC,EAAAC,cAAA,cAASS,EAAQI,QAErBf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBACXQ,EAAQK,QAEbhB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,KACIe,OAAO,SACPC,IAAI,sBACJC,KAAMR,EAAQzE,KAEbyE,EAAQzE,QAKzB8D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OACIC,UAAU,aACVI,aAAW,SAEXP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBACZH,EAAAC,EAAAC,cAAA,KACIC,UAAU,kBACViB,cAAY,UAPxB,OAWKT,EAAQU,QAXb,eAcArB,EAAAC,EAAAC,cAAA,OACIC,UAAU,aACVI,aAAW,WAEXP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBACZH,EAAAC,EAAAC,cAAA,KACIC,UAAU,kBACViB,cAAY,UAPxB,OAWKT,EAAQW,cAXb,yBA8BlCC,EAAa,SAAA1B,GAEf,IADA,IAAI2B,EAAW,GACNC,EAAI,EAAGA,EAAI5B,EAAM6B,MAAOD,IAAK,CAClC,IAAIE,EAAOF,EAAI,EACXA,IAAM5B,EAAMX,UAAY,GACxBsC,EAASI,KACL5B,EAAAC,EAAAC,cAAA,MAAI7C,IAAKsE,GACL3B,EAAAC,EAAAC,cAAA,KACIE,QAASP,EAAMgC,UACf1B,UAAU,8BAETwB,KAKbH,EAASI,KACL5B,EAAAC,EAAAC,cAAA,MAAI7C,IAAKsE,GACL3B,EAAAC,EAAAC,cAAA,KAAGE,QAASP,EAAMgC,UAAW1B,UAAU,mBAClCwB,KAOrB,OACI3B,EAAAC,EAAAC,cAAA,MAAIU,GAAG,kBAAkBT,UAAU,mBAC9BqB,IAKPlF,cACF,SAAAA,EAAYuD,GAAO,IAAAiC,EAAA,OAAA9C,OAAA+C,EAAA,EAAA/C,CAAAgD,KAAA1F,IACfwF,EAAA9C,OAAAiD,EAAA,EAAAjD,CAAAgD,KAAAhD,OAAAkD,EAAA,EAAAlD,CAAA1C,GAAA6F,KAAAH,KAAMnC,KAQVuC,gBAAkB,SAAAC,GACdP,EAAKjC,MAAMyC,kBAAkBD,EAAG5D,MAAO8D,IAAMjG,KAAKC,YAVnCuF,EAcnBjB,aAAe,SAAArE,GACXsF,EAAKU,SAAS,CAAE1B,MAAOtE,KAfRsF,EAmBnBW,aAAe,WACXX,EAAKU,SAAS,CAAE1B,MAAO,QApBRgB,EAwBnBD,UAAY,SAAAQ,GACR,IAAIK,EAAkD,IAAnCC,OAAON,EAAGpB,OAAO2B,WAAa,GAGjDd,EAAKjC,MAAMgD,aAAaH,IA5BTZ,EAoCnBgB,YAAc,SAAAC,GACY,KAAlBA,EAAMC,SACNlB,EAAKU,SAAS,CAAE1B,MAAO,QAnC3BgB,EAAKlD,MAAQ,CACTkC,MAAO,MAJIgB,mFA4CfmB,SAASC,iBAAiB,UAAWlB,KAAKc,4DAK1CG,SAASE,oBAAoB,UAAWnB,KAAKc,8CAI7C,IACIM,EACAC,EAFAC,EAAS,GAab,GAAwB,OAApBtB,KAAKnC,MAAM3B,KAAe,CAG1BoF,EAFWtB,KAAKnC,MAAM3B,KAAKA,KAAKqF,SAG3B7C,IAAI,SAAAlE,GAAK,MAAK,CACXoE,GAAIpE,EAAM0B,KAAK0C,GACfG,MAAOvE,EAAM0B,KAAK6C,MAClB7E,IAAKM,EAAM0B,KAAKhC,IAChB4E,MAAOtE,EAAM0B,KAAKhC,IAClBoF,cAAe9E,EAAM0B,KAAKsF,aAC1BnC,QAAS7E,EAAM0B,KAAKuF,IACpBzC,OAAQxE,EAAM0B,KAAK8C,UAEtB0C,OAAO,SAAAlH,GAAK,OAhB4B,MAgBfA,EAAMN,IAhBzByH,MAAM,2BAkBjB,IAAIjC,EAAQkC,KAAKC,KAAKP,EAAOxE,OAAS,IAGlCuE,EADA3B,EAAQ,EAEJ1B,EAAAC,EAAAC,cAAC4D,EAAD,CACIjC,UAAWG,KAAKH,UAChBH,MAAOA,EACPxC,UAAW8C,KAAKnC,MAAMX,YAIjB,KAGboE,EAAOxE,OAAS,KAChBwE,EAASA,EAAOS,MACZ/B,KAAKnC,MAAMX,UACX8C,KAAKnC,MAAMX,UAAY,KAiBnC,OAZIoE,EAAOxE,OAAS,EAChBsE,EACIpD,EAAAC,EAAAC,cAAC8D,EAAD,CACInD,aAAcmB,KAAKnB,aACnBJ,UAAW6C,KAInBF,EAAcpD,EAAAC,EAAAC,cAAA,oDACdmD,EAAa,MAIbrD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,OAEK6B,KAAKnC,MAAMvB,aAMhC0B,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAb,yBACAH,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CACIC,SAAUlC,KAAKI,gBACf+B,QAASnC,KAAKnC,MAAMrB,WACpBoC,GAAG,aACHT,UAAU,gBAIlBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAb,SACCiD,GAELpD,EAAAC,EAAAC,cAAA,OACIC,UAAU,sBACVI,aAAW,cAEV8C,KAIbrD,EAAAC,EAAAC,cAACkE,EAAD,CACIrE,WAAYiC,KAAKS,aACjBjG,MAAOwF,KAAKpD,MAAMkC,gBA5JnBuD,IAAMC,WAmKVC,oBA3US,SAAA3F,GAAK,OAAAI,OAAAC,EAAA,EAAAD,CAAA,GACtBJ,EAAMD,SAGc,SAAA3B,GAAQ,MAAK,CACpCsF,kBAAmB,SAACjF,EAAKN,GAAN,OACfC,EAAS,CAAEC,KJHa,mBIGWF,UAASM,SAChDwF,aAAc,SAAA3D,GAAS,OAAIlC,EAAS,CAAEC,KJHf,cIGkCiC,iBAoU9CqF,CAGbjI,GCnUIkI,mLAEE,OACIxE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuE,EAAD,CAAMnG,QAAS0D,KAAKnC,MAAMvB,kBAJxB+F,IAAMC,WAUTC,oBAtBS,SAAA3F,GACpB,MAAO,CACHL,UAAWK,EAAMD,OAAOJ,UACxBD,QAASM,EAAMD,OAAOL,QACtBJ,KAAMU,EAAMD,OAAOT,OAIA,SAAAlB,GAAQ,MAAK,CACpC0H,OAAQ,SAAA3H,GAAO,OAAIC,EAAS,CAAEC,KLVV,WKU0BF,eAanCwH,CAGbC,GCpBFG,IAASC,OACR5E,EAAAC,EAAAC,cAAC2E,EAAA,SAAD,CAAUlI,MAAOA,GAChBqD,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAiBzF,QAASA,GACzBW,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,KACC/E,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWV,OAK9BvB,SAASkC,eAAe","file":"static/js/main.9329286c.chunk.js","sourcesContent":["import superagentPromise from \"superagent-promise\";\nimport _superagent from \"superagent\";\n\nconst superagent = superagentPromise(_superagent, global.Promise);\n\n// API to fetch data.\nconst API_ROOT = \"https://www.reddit.com/r/\";\n\nconst responseBody = res => res.body;\n\nconst requests = {\n\tget: url => superagent.get(`${API_ROOT}${url}`).then(responseBody)\n};\n\nconst Home = {\n\tsubreddit: value => requests.get(`${value}.json`)\n};\n\nexport default {\n\tHome\n};\n","import NProgress from \"nprogress\";\nimport { ASYNC_START, ASYNC_END } from \"./constants/actionTypes\";\n\n/**\n * Promise Middleware.\n * Request API and send response back.\n */\nconst promiseMiddleware = store => next => action => {\n    if (isPromise(action.payload)) {\n        store.dispatch({ type: ASYNC_START, subtype: action.type });\n\n        NProgress.start();\n        action.payload(action.key).then(\n            res => {\n                console.log(\"RESULT\", res);\n                action.payload = res;\n                window.localStorage.setItem(action.key, JSON.stringify(res));\n                store.dispatch({\n                    type: ASYNC_END,\n                    promise: action.payload\n                });\n                store.dispatch(action);\n                NProgress.done();\n            },\n            error => {\n                console.log(\"ERROR\", error);\n                action.error = true;\n                action.payload = error.response.body;\n                store.dispatch({\n                    type: ASYNC_END,\n                    promise: action.payload\n                });\n                store.dispatch(action);\n                NProgress.done();\n            }\n        );\n        return;\n    }\n    next(action);\n};\n\n/**\n * Local Storage Middleware.\n * Check for any data in local storage with respect to subreddit and if data exist, return the data.\n */\nconst localStorageMiddleware = store => next => action => {\n    let data = window.localStorage.getItem(action.key);\n\n    if (data !== null) {\n        action.payload = JSON.parse(data);\n    }\n    next(action);\n};\n\n/**\n * Function to check whether given payload is fuction.\n * @return {Boolean}   [Return whether given value Function or not.]\n */\nfunction isPromise(v) {\n    return v && typeof v === \"function\";\n}\n\nexport { promiseMiddleware, localStorageMiddleware };\n","/**\n * Constants to handle Redux Store at one place.\n */\n\nexport const APP_LOAD = \"APP_LOAD\";\n\nexport const ASYNC_START = \"ASYNC_START\";\nexport const ASYNC_END = \"ASYNC_END\";\n\nexport const CHANGE_SUBREDDIT = \"CHANGE_SUBREDDIT\";\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\n","import {\n    APP_LOAD,\n    CHANGE_SUBREDDIT,\n    CHANGE_PAGE\n} from \"../constants/actionTypes\";\n\n// Array of Subreddits\nconst subredditsOptions = [\n    {\n        value: 0,\n        label: \"alternativeart\"\n    },\n    {\n        value: 1,\n        label: \"pics\"\n    },\n    {\n        value: 2,\n        label: \"gifs\"\n    },\n    {\n        value: 3,\n        label: \"adviceanimals\"\n    },\n    {\n        value: 4,\n        label: \"cats\"\n    },\n    {\n        value: 5,\n        label: \"images\"\n    },\n    {\n        value: 6,\n        label: \"photoshopbattles\"\n    },\n    {\n        value: 7,\n        label: \"hmmm\"\n    },\n    {\n        value: 8,\n        label: \"all\"\n    },\n    {\n        value: 9,\n        label: \"aww\"\n    }\n];\n\nconst defaultState = {\n    appName: \"Subreddits\",\n    appLoaded: false,\n    data: null,\n    subreddits: subredditsOptions\n};\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case APP_LOAD:\n            return {\n                ...state,\n                appLoaded: true\n            };\n        case CHANGE_SUBREDDIT:\n            return {\n                ...state,\n                pageIndex: 0,\n                data: action.payload\n            };\n        case CHANGE_PAGE:\n            return {\n                ...state,\n                pageIndex: action.pageIndex\n            };\n        default:\n            return state;\n    }\n};\n","import common from \"./reducers/common\";\nimport { combineReducers } from \"redux\";\nimport { routerReducer } from \"react-router-redux\";\n\nexport default combineReducers({\n\tcommon,\n\trouter: routerReducer\n});\n","import { applyMiddleware, createStore } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport { promiseMiddleware, localStorageMiddleware } from \"./middleware\";\nimport reducer from \"./reducer\";\n\nimport { routerMiddleware } from \"react-router-redux\";\nimport createHistory from \"history/createBrowserHistory\";\n\nexport const history = createHistory();\n\n// Build the middleware for intercepting and dispatching navigation actions\nconst myRouterMiddleware = routerMiddleware(history);\n\nconst getMiddleware = () => {\n\tif (process.env.NODE_ENV === \"production\") {\n\t\treturn applyMiddleware(\n\t\t\tmyRouterMiddleware,\n\t\t\tlocalStorageMiddleware,\n\t\t\tpromiseMiddleware\n\t\t);\n\t} else {\n\t\t// Enable additional logging in non-production environments.\n\t\treturn applyMiddleware(\n\t\t\tmyRouterMiddleware,\n\t\t\tlocalStorageMiddleware,\n\t\t\tpromiseMiddleware,\n\t\t\tcreateLogger()\n\t\t);\n\t}\n};\n\nexport const store = createStore(reducer, getMiddleware());\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Select from \"react-select\";\nimport agent from \"../../agent\";\nimport { CHANGE_SUBREDDIT, CHANGE_PAGE } from \"../../constants/actionTypes\";\n\nconst mapStateToProps = state => ({\n    ...state.common\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onChangeSubreddit: (key, payload) =>\n        dispatch({ type: CHANGE_SUBREDDIT, payload, key }),\n    onChangePage: pageIndex => dispatch({ type: CHANGE_PAGE, pageIndex })\n});\n\n/**\n * ImageModel Component\n * @param  {Object} props [Properties for ImageModel Component]\n * @return Component.\n */\nconst ImageModel = props => {\n    const closeImageModal = () => {\n        props.closeImage();\n    };\n\n    if (props.value !== null) {\n        return (\n            <div className=\"modal is-active\">\n                <div className=\"image\">\n                    <div className=\"viewPort\">\n                        <div\n                            onClick={closeImageModal}\n                            className=\"modal-background\"\n                        />\n                        <img className=\"maxWH\" src={props.value} alt=\"\" />\n                    </div>\n                </div>\n                <button\n                    onClick={closeImageModal}\n                    className=\"modal-close is-large\"\n                    aria-label=\"close\"\n                />\n            </div>\n        );\n    } else {\n        return null;\n    }\n};\n\n/**\n * RedditList Component\n * @param  {Object} props [Properties of a RedditList Component]\n * @return Component.\n */\nconst RedditList = props => {\n    return (\n        <div>\n            {props.redditArr.map(article => {\n                return (\n                    <div className=\"box\" key={article.id}>\n                        <article className=\"media\">\n                            <div className=\"media-left\">\n                                <figure className=\"image is-128x128 hideOverflow\">\n                                    <img\n                                        onClick={() =>\n                                            props.onImageClick(article.image)\n                                        }\n                                        src={article.image}\n                                        alt=\"Article\"\n                                    />\n                                </figure>\n                            </div>\n                            <div className=\"media-content\">\n                                <div className=\"content\">\n                                    <p>\n                                        <span className=\"subtitle\">\n                                            <strong>{article.title}</strong>\n                                        </span>\n                                        <br />\n                                        <span className=\"article-author\">\n                                            {article.author}\n                                        </span>\n                                        <br />\n                                        <small>\n                                            <a\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                                href={article.url}\n                                            >\n                                                {article.url}\n                                            </a>\n                                        </small>\n                                    </p>\n                                </div>\n                                <nav className=\"level is-mobile article-meta\">\n                                    <div className=\"level-left\">\n                                        <div\n                                            className=\"level-item\"\n                                            aria-label=\"reply\"\n                                        >\n                                            <span className=\"icon is-small\">\n                                                <i\n                                                    className=\"fas fa-angle-up\"\n                                                    aria-hidden=\"true\"\n                                                />\n                                            </span>\n                                            &nbsp;\n                                            {article.upvotes}\n                                            &nbsp;Upvotes\n                                        </div>\n                                        <div\n                                            className=\"level-item\"\n                                            aria-label=\"retweet\"\n                                        >\n                                            <span className=\"icon is-small\">\n                                                <i\n                                                    className=\"fas fa-comments\"\n                                                    aria-hidden=\"true\"\n                                                />\n                                            </span>\n                                            &nbsp;\n                                            {article.commentsCount}\n                                            &nbsp;Comments\n                                        </div>\n                                    </div>\n                                </nav>\n                            </div>\n                        </article>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\n/**\n * Pagination component.\n * @param  {Object} props [Properties for Pagination component.]\n * @return Component.\n */\nconst Pagination = props => {\n    let liString = [];\n    for (var i = 0; i < props.pages; i++) {\n        let iVal = i + 1; // Adding 1 due to pagination text, which can't start from 0.\n        if (i === props.pageIndex / 10) {\n            liString.push(\n                <li key={iVal}>\n                    <a\n                        onClick={props.clickPage}\n                        className=\"pagination-link is-current\"\n                    >\n                        {iVal}\n                    </a>\n                </li>\n            );\n        } else {\n            liString.push(\n                <li key={iVal}>\n                    <a onClick={props.clickPage} className=\"pagination-link\">\n                        {iVal}\n                    </a>\n                </li>\n            );\n        }\n    }\n\n    return (\n        <ul id=\"pagination_list\" className=\"pagination-list\">\n            {liString}\n        </ul>\n    );\n};\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            image: null // Image state - Show | Hide.\n        };\n    }\n\n    // Dispatch action on change of Subreddit.\n    changeSubreddit = ev => {\n        this.props.onChangeSubreddit(ev.label, agent.Home.subreddit);\n    };\n\n    // On Click on Image in feed.\n    onImageClick = value => {\n        this.setState({ image: value });\n    };\n\n    // Close ImageModal.\n    onCloseImage = () => {\n        this.setState({ image: null });\n    };\n\n    // Click Page Function.\n    clickPage = ev => {\n        let pageClicked = (Number(ev.target.innerHTML) - 1) * 10;\n\n        // this.setState({ pageIndex: pageClicked });\n        this.props.onChangePage(pageClicked);\n    };\n\n    /**\n     * Close Image on pressing ESC key.\n     * @param  {[type]} event [description]\n     * @return {[type]}       [description]\n     */\n    escFunction = event => {\n        if (event.keyCode === 27) {\n            this.setState({ image: null });\n        }\n    };\n\n    // Binding ESC key function\n    componentDidMount() {\n        document.addEventListener(\"keydown\", this.escFunction);\n    }\n\n    // Remove event listener.\n    componentWillUnmount() {\n        document.removeEventListener(\"keydown\", this.escFunction);\n    }\n\n    render() {\n        let result = [];\n        let redditBlock;\n        let pagination;\n\n        /**\n         * Check whether URL is an Image or not.\n         * @param  {String} url [URL of the image.]\n         * @return {Boolean}    [Type of URL - True | False]\n         */\n        const checkURL = url => {\n            return url.match(/\\.(jpeg|jpg|gif|png)$/) != null;\n        };\n\n        if (this.props.data !== null) {\n            let data = this.props.data.data.children;\n\n            result = data\n                .map(value => ({\n                    id: value.data.id,\n                    title: value.data.title,\n                    url: value.data.url,\n                    image: value.data.url,\n                    commentsCount: value.data.num_comments,\n                    upvotes: value.data.ups,\n                    author: value.data.author\n                }))\n                .filter(value => checkURL(value.url));\n\n            let pages = Math.ceil(result.length / 10);\n\n            if (pages > 1) {\n                pagination = (\n                    <Pagination\n                        clickPage={this.clickPage}\n                        pages={pages}\n                        pageIndex={this.props.pageIndex}\n                    />\n                );\n            } else {\n                pagination = null;\n            }\n\n            if (result.length > 10) {\n                result = result.slice(\n                    this.props.pageIndex,\n                    this.props.pageIndex + 10\n                );\n            }\n        }\n\n        if (result.length > 0) {\n            redditBlock = (\n                <RedditList\n                    onImageClick={this.onImageClick}\n                    redditArr={result}\n                />\n            );\n        } else {\n            redditBlock = <div>Select subreddit to display posts ...</div>;\n            pagination = null;\n        }\n\n        return (\n            <div>\n                <nav className=\"navbar is-spaced has-shadow t-navbar\">\n                    <div className=\"container header\">\n                        <div className=\"navbar-menu is-active\">\n                            <div className=\"navbar-start\">\n                                <p className=\"is-size-5\">\n                                    &nbsp;\n                                    {this.props.appName}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </nav>\n                <section className=\"section home\">\n                    <div className=\"container\">\n                        <div className=\"m-select-box\">\n                            <p className=\"subtitle\">Select your subreddit</p>\n                            <Select\n                                onChange={this.changeSubreddit}\n                                options={this.props.subreddits}\n                                id=\"subreddits\"\n                                className=\"subreddits\"\n                            />\n                        </div>\n\n                        <div className=\"m-data\">\n                            <p className=\"subtitle\">Posts</p>\n                            {redditBlock}\n                        </div>\n                        <nav\n                            className=\"pagination paginate\"\n                            aria-label=\"pagination\"\n                        >\n                            {pagination}\n                        </nav>\n                    </div>\n                </section>\n                <ImageModel\n                    closeImage={this.onCloseImage}\n                    value={this.state.image}\n                />\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Home);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { APP_LOAD } from \"../constants/actionTypes\";\nimport Home from \"../components/Home\";\n\nconst mapStateToProps = state => {\n    return {\n        appLoaded: state.common.appLoaded,\n        appName: state.common.appName,\n        data: state.common.data\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onLoad: payload => dispatch({ type: APP_LOAD, payload })\n});\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div>\n                <Home appName={this.props.appName} />\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport React from \"react\";\nimport { store, history } from \"./store\";\n\nimport { Route, Switch } from \"react-router-dom\";\nimport { ConnectedRouter } from \"react-router-redux\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<ConnectedRouter history={history}>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" component={App} />\n\t\t\t</Switch>\n\t\t</ConnectedRouter>\n\t</Provider>,\n\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}